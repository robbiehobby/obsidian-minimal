@use "../abstract/mixin" as *;

body.obsidian-app {
  --callout-blend-mode: none;
  --callout-border-opacity: 0.4;
  --callout-border-width: 1px;
  --callout-opacity: 0.1;
  --callout-radius: var(--radius-m);
  --callout-title-size: var(--font-smallest);
}

.callout {
  --callout-padding: calc(var(--size-4-4) * 0.75) var(--size-4-4) 0;
  --callout-border-color: rgba(var(--callout-color), 0.4);

  --list-marker-color: rgb(var(--callout-color));
  --p-spacing: calc(var(--size-4-4) * 0.75);

  &[data-callout="attention"] {
    --callout-color: var(--color-red-rgb);
  }
}

.callout {
  position: relative;
  min-height: var(--size-4-10);
  margin-block: var(--size-4-4);
  overflow-x: auto;
  background-color: var(--background-primary);
  border: 1px solid var(--callout-border-color);
  box-shadow: var(--shadow-s);

  // Move background to pseudo element to separate blending mode
  &::before {
    position: absolute;
    inset: 0;
    content: "";
    background-color: rgba(var(--callout-color), 0.1);
    mix-blend-mode: hard-light;
  }

  .callout {
    background-color: transparent;
  }
}

.callout-title {
  position: relative;
  gap: var(--size-2-5);
  align-items: center;
  max-width: fit-content;
  margin-block-end: calc(var(--p-spacing) * -0.5);
  text-transform: uppercase;
  border-radius: 0 0 var(--radius-s) var(--radius-s);

  .callout-title-inner {
    font-family: var(--font-heading);
  }
}

.callout-content {
  position: relative;
  z-index: 1;
  overflow: visible;
  font-size: var(--font-small);

  &:has(> h3:first-child) {
    padding-top: calc(var(--p-spacing) * 2);
  }

  > .callout:first-child {
    margin-top: calc(var(--p-spacing) * 2) !important;
  }

  :is(h1, h2, h3, h4, h5, h6) {
    margin-top: calc(var(--p-spacing) + var(--p-spacing)) !important;
  }

  h2::before {
    content: unset;
  }

  :is(h3, h4, h5, h6) {
    --h3-bg: rgb(var(--callout-color));
    --h4-color: var(--h3-bg);
    --h5-color: var(--h3-bg);
    --h6-color: var(--h3-bg);
  }
}

.markdown-source-view.mod-cm6.is-live-preview .callout-content {
  > div:first-child {
    margin-top: var(--p-spacing);
  }

  > div {
    margin-bottom: var(--p-spacing);
  }
}

// Matches the link style to the callout color
.callout :is(.internal-link, .external-link) {
  color: color-mix(in oklab, rgb(var(--callout-color)) 70%, white);

  &:hover {
    color: color-mix(in oklab, rgb(var(--callout-color)) 50%, white);
  }
}

// Matches the inline code style with the callout color
.callout code:not(pre code) {
  &,
  .markdown-rendered & {
    color: color-mix(in oklab, rgb(var(--callout-color)) 50%, white);
    outline: 1px solid rgb(var(--callout-color), 0.5);
    background-color: unset;
  }
}

// Matches the checkbox style with the callout color
.callout input[type="checkbox"] {
  border-color: rgb(var(--callout-color));

  &:checked {
    background-color: rgb(var(--callout-color));
  }
}

// Adjusts the spacing of lists within callout embed previews
body.obsidian-app:not(.is-mobile) .callout-content {
  > :is(ul, ol) {
    margin-inline-start: -0.15em;
  }

  .task-list-item-checkbox {
    top: 0.15em;
  }
}

body.obsidian-app.is-mobile .callout-content .task-list-item-checkbox {
  top: 0.3em;
}
