@use "../abstract/variables" as *;

.callout[data-callout*="x-code"] {
  --x-callout-padding-y: calc(var(--x-code-block-padding-y) * 0.9);
  --x-callout-padding-x: var(--x-code-block-padding-x);
  --x-callout-title-transform: none;
  --x-callout-code-title-size: var(--font-smaller);
  --x-callout-code-content-size: var(--font-small);
}

.callout[data-callout*="x-code"] {
  --callout-title-size: var(--x-callout-code-title-size);
  --callout-title-color: var(--text-normal);
}

.callout[data-callout*="x-code"] .callout-content {
  font-size: var(--x-callout-code-content-size);
}

.markdown-reading-view {
  .callout[data-callout*="x-code"] {
    margin-bottom: -1em;
    border-bottom: #{$border-sm} solid rgb(var(--callout-color, #000), var(--callout-border-opacity));
    border-radius: var(--x-code-block-radius);
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
  }

  .el-div:has(.callout[data-callout*="x-code"]) + .el-pre pre {
    background-color: var(--background-primary-alt);
    border: none;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
  }

  @each $color in $colors {
    .el-div:has(.callout[data-callout*="x-code"]):has(.callout[data-callout*="x-#{'' + $color}"]) + .el-pre pre {
      &,
      button.copy-code-button {
        background-color: rgba(var(--color-#{$color}-rgb), var(--x-callout-background-opacity));
      }
    }
  }
}
